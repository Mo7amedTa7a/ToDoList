/* mobile screen */
/* Start header */
header {
  background-color: hsl(var(--text-color-primary));
  padding: 1.5rem;
  position: fixed;
  height: 7rem;
  z-index: 99;
  width: 100%;
  box-shadow: 0rem 0rem 0.8rem hsl(var(--primary-color));
}

.containerHeaderHome {
  width: 95%;
  margin: auto;
}

.containerHeaderHome {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.containerHeaderHome img {
  width: 90px;
}

#btnHeaderHome {
  background-color: transparent;
  font-size: 2.5rem;
  color: hsl(var(--primary-color));
}

#btnHeaderHome:hover {
  cursor: pointer;
  color: hsla(var(--primary-color), 0.8);
}

#btnLogInHome {
  background-color: hsl(var(--primary-color));
  padding: 0.8rem 2rem;
  font-size: 1.5rem;
  color: hsl(var(--text-color-primary));
  border-radius: 0.5rem;
}

[dir='rtl'] #btnLogInHome {
  padding: .5rem 1rem;
  font-size: 1.2rem;
}

.welcom-name {
  display: none;
  color: hsl(var(--primary-color));
}

.menuHeader {
  text-align: center;
  position: absolute;
  right: 2.5rem;
  top: 6rem;
  background-color: hsl(var(--text-color-primary));
  border: 0.1rem solid hsl(var(--primary-color));
  padding: 1rem;
  border-radius: 0.6rem;
  font-size: 1.6rem;
}

.menuHeader.active {
  display: none;
}

.menuHeader li {
  padding: 0.6rem 0;
}

.menuHeader button {
  background-color: hsl(var(--primary-color));
  color: hsl(var(--text-color-primary));
  margin-top: 1rem;
  border-radius: 0.5rem;
  padding: 0.5rem 1rem;
}

.menuHeader button:hover {
  cursor: pointer;
  background-color: hsla(var(--primary-color), 0.8);
}

.headerRight {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.headerRight select {
  text-align: center;
  background-color: transparent;
  font-size: 1.5rem;
  color: hsl(var(--primary-color));
  border: none;
}

@media (min-width: 1024px) {
  .welcom-name {
    display: block;
  }

  .containerHeaderHome {
    width: 90%;
  }

  .containerHeaderHome img {
    width: 100px;
  }
}

/* End header */
.containerSection {
  position: relative;
  padding-top: 7rem;
  /* height: 100vh; */
}

.sectionHeader {
  background-color: hsl(var(--secondary-color));
}

.sectionHeader2 {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 14rem;
  color: hsl(var(--text-color-primary));
}

.sectionHeader2 p {
  font-size: 1.8rem;
}

.sectionHeader2 button {
  background-color: hsl(var(--primary-color));
  padding: 0.5rem 1.2rem;
  border-radius: 0.6rem;
  font-weight: bold;
  font-size: 1.8rem;
}

.sectionHeader2 button:hover {
  cursor: pointer;
  background-color: hsla(var(--primary-color), 0.9);
}

/* Start Box New To Do */
.addNewToDo {
  background-color: hsl(var(--text-color-primary));
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(-50%);
  padding: 1rem;
  width: 80%;
  text-align: center;
  border-radius: .5rem;
}

.layer {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 99;
  width: 100%;
  height: 100vh;
  background-color: hsla(var(--secondary-color), .7);
}

.layer.active {
  display: none;
}

.boxHeader {
  display: flex;
  justify-content: space-between;
}

.boxHeader i {
  font-size: 1.8rem;
  transition: color .2s ease-in-out;
}

.boxHeader i:hover {
  cursor: pointer;
  color: red;
}

.addNewToDo h2 {
  padding-bottom: 2rem;
  color: hsl(var(--primary-color));
  font-size: 1.8rem;
}

.addressLabel,
.descriptionLabel {
  position: relative;
  padding: 1rem 0;
  width: 100%;
}

.addNewToDo label {
  position: absolute;
  left: 1.5rem;
  top: 2rem;
  font-size: 1.5rem;
  color: hsl(var(--text-color-secondary));
  transition: top 0.3s ease;
}

.addNewToDo input:focus+label,
.addNewToDo input:not(:placeholder-shown)+label {
  top: 0rem;
  font-size: 1.5rem;
  color: hsl(var(--primary-color));
}

.addNewToDo input {
  width: 100%;
  padding: 1rem;
  font-size: 1.6rem;
  border-bottom: 0.2rem solid hsl(var(--primary-color));
  background-color: hsla(var(--text-color-secondary), 0.1);
}

.addNewToDo input:nth-child(2) {
  margin: 2rem 0;
}

.btnAddBox {
  background-color: hsl(var(--primary-color));
  width: 100%;
  padding: .8rem 0;
  color: hsl(var(--text-color-primary));
  font-size: 1.6rem;
}

.btnAddBox:hover {
  cursor: pointer;
  background-color: hsla(var(--primary-color), .9);
}

/* End Box New To Do */
.sectionBody {
  background-color: hsl(var(--text-color-primary));
  margin-top: -3rem;
  /* height: calc(100vh - (7rem + 14rem)); */
  border-radius: 0.3rem;
}

.sectionBody.container {
  width: 90%;
}

.search {
  border: 1px solid hsla(var(--text-color-secondary), 0.3);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  padding: 1rem;
}

.search input {
  border: 1px solid hsl(var(--primary-color));
  width: 100%;
  border-radius: 0.5rem;
  padding: .7rem;
}

.filter {
  font-size: 1.5rem;
  border: 1px solid hsl(var(--primary-color));
  border-radius: 0.5rem;
  padding: 0.5rem;
}

.filter:hover {
  cursor: pointer;
}

.toDoList {
  padding-bottom: 2rem;
  min-height: 70vh;
}

.toDo {
  margin-top: 1rem;
  position: relative;
  padding: 1rem;
  border: 1px solid hsla(var(--text-color-secondary), 0.3);
  transition: border 0.2s ease-in-out;
  min-height: 10rem;
  transition: all .3s ease-in-out;
}

.emptyTitle {
  height: 25rem;
  font-size: 4rem;
  color: hsla(var(--text-color-secondary), .5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.toDo:hover {
  transform: scale(1.02);
}

.toDoBody,
.toDoHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.toDoHeader {
  padding-bottom: 1rem;
}

.toDoHeader .title {
  font-size: 2rem;
  color: hsl(var(--primary-color));
}

.toDoBody p {
  font-size: 1.5rem;
  width: 90%;
}

.toDoHeader button {
  font-size: 1.7rem;
  background-color: transparent;
  transition: all 0.3s ease-in-out;
}

.toDoHeader button:hover {
  cursor: pointer;
}

.toDoBody button {
  background-color: hsl(var(--text-color-primary));
  padding: 0.5rem;
  border: 0.2rem solid rgb(49, 170, 12);
  border-radius: 50%;
  color: rgb(49, 170, 12);
  font-size: 1.5rem;
}

.toDoBody button:hover {
  cursor: pointer;
  background-color: hsla(var(--secondary-color), 0.1);
}

.toDo .btns {
  display: flex;
  flex-direction: column;
  box-shadow: 0rem 0rem 0.8rem hsla(var(--secondary-color), .4);
  padding: .5rem;
  position: absolute;
  right: 2.5rem;
  top: 1rem;
  background-color: hsl(var(--text-color-primary));
  width: 12rem;
}

.toDo .btns button {
  background-color: transparent;
}

.toDo .edit,
.toDo .delete {
  display: flex;
  justify-content: space-between;
  padding: 1rem;
  font-size: 1.6rem;
  transition: all .3s ease-in-out;
}

.toDo .edit i {
  color: hsl(var(--primary-color));
}

.toDo .delete {
  color: rgb(196, 9, 9);
}

.toDo .edit:hover,
.toDo .delete:hover {
  cursor: pointer;
  background-color: hsla(var(--secondary-color), .1);
}

.toDo .delete {
  padding-top: 1rem;
}

.btns.active {
  display: none;
}

@media (min-width: 1024px) {
  .addNewToDo {
    top: 40%;
    width: 50%;
  }

  .sectionBody.container {
    width: 80%;
  }
}

/* Start Footer */
/* MObile screen */
footer {

  background-color: hsl(var(--secondary-color));
}

.container-footer {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  text-align: center;
}

.container-footer>p {
  font-size: 1.8rem;
  color: hsl(var(--primary-color));
}

.container-footer .social-icons {
  margin: auto;
  padding: 1rem;
}

.social-icons-footer .t:hover {
  color: hsl(var(--text-color-primary));
}

.social-icons>a {
  font-size: 2.5rem;
  padding: 0.7rem;
  color: hsl(var(--primary-color));
  transition: all 0.3s ease-in-out;
}

.social-icons .w:hover,
.social-icons .l:hover,
.social-icons .f:hover,
.social-icons .t:hover {
  color: #1b53eb;
  text-shadow: 2px 2px 10px hsl(var(--primary-color));
  transform: scale(1.1);
}

.social-icons .t:hover {
  color: hsl(var(--text-color-primary));
}

.social-icons .w:hover {
  color: rgb(4, 145, 4);
}

/* Eng Footer */

/* RTL overrides */
[dir='rtl'] .sectionHeader2,
[dir='rtl'] .toDoBody,
[dir='rtl'] .toDoHeader,
[dir='rtl'] .containerHeaderHome {
  direction: rtl;
}

[dir='rtl'] .menuHeader {
  left: 2.5rem;
  right: auto;
}

[dir='rtl'] .toDo .btns {
  left: 2.5rem;
  right: auto;
}

[dir='rtl'] .toDoBody p {
  text-align: right;
}

[dir='rtl'] label {
  left: auto;
  right: 1.5rem;
}

[dir='rtl'] .addNewToDo input {
  text-align: right;
}

[dir='rtl'] .search input {
  text-align: right;
}